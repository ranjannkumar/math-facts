// src/components/ResultsScreen.jsx
import React, { useEffect, useContext, useRef, useState } from 'react';
import Confetti from 'react-confetti';
import { showShootingStars, clearShootingStars } from '../utils/mathGameLogic';
import { MathGameContext } from '../App.jsx';
import { useNavigate } from 'react-router-dom';
import { quizComplete } from '../api/mathApi.js';

const ResultsScreen = () => {
Â  Â  const navigate = useNavigate();
Â  Â  const [leaving, setLeaving] = useState(false);

Â  Â  const {
Â  Â  Â  Â  selectedDifficulty,
Â  Â  Â  Â  selectedTable,
Â  Â  Â  Â  sessionCorrectCount,
Â  Â  Â  Â  correctCount,
Â  Â  Â  Â  grandTotalCorrect,
Â  Â  Â  Â  setShowResult,
Â  Â  Â  Â  quizRunId,
Â  Â  Â  Â  childPin,
       setQuizRunId, 
Â  Â  } = useContext(MathGameContext);

Â  Â  // --- Quiz Info ---
Â  Â  const isBlack = String(selectedDifficulty).startsWith('black');
Â  Â  const degree = isBlack ? parseInt(String(selectedDifficulty).split('-')[1] || '1', 10) : null;
Â  Â  const maxQuestions = isBlack ? (degree === 7 ? 30 : 20) : 10;
Â  Â  const allCorrect = sessionCorrectCount === maxQuestions; Â 

Â  Â  // 1. Redirect if not perfect score
Â  Â  useEffect(() => {
Â  Â  Â  Â  // Redundant safeguard: navigation in hook should prevent this.
Â  Â  Â  Â  if (!allCorrect) {
Â  Â  Â  Â  Â  Â  navigate('/way-to-go', { replace: true });
Â  Â  Â  Â  }
Â  Â  }, [allCorrect, navigate]);
Â  Â  
Â  Â  // 2. Mark complete on the backend (optional, but good for final record keeping)
Â  Â  const completionSentRef = useRef(false);
Â  Â  useEffect(() => {
Â  Â  Â  Â  if (allCorrect && !completionSentRef.current && quizRunId) {
Â  Â  Â  Â  Â  Â  completionSentRef.current = true;
Â  Â  Â  Â  Â  Â  // Progression already handled by the final /quiz/answer call. This is non-critical.
Â  Â  Â  Â  Â  Â  quizComplete(quizRunId, childPin).catch(console.error);
Â  Â  Â  Â  }
Â  Â  }, [allCorrect, quizRunId, childPin]);

Â  Â  // 3. Shooting stars/Confetti (client-side visual effect)
Â  Â  const starsShownRef = useRef(false);
Â  Â  useEffect(() => {
Â  Â  Â  Â  if (allCorrect && !starsShownRef.current) {
Â  Â  Â  Â  Â  Â  starsShownRef.current = true;
Â  Â  Â  Â  Â  Â  showShootingStars();
Â  Â  Â  Â  }
Â  Â  Â  Â  return () => clearShootingStars();
Â  Â  }, [allCorrect]);


Â  Â  // Only proceed with the rest of the logic if allCorrect is true
Â  Â  if (!allCorrect) {
Â  Â  Â  Â  return null;
Â  Â  }

Â  Â  const [timeSecs, setTimeSecs] = useState(() => {
Â  Â  Â  Â  const ls = Number(localStorage.getItem('math-last-quiz-duration') || 0);
Â  Â  Â  Â  return Number.isFinite(ls) ? ls : 0;
Â  Â  });
Â  Â  // FIX: Format total time today in minutes and seconds
Â  Â  const sessionTimeSecs = Math.round(timeSecs);
Â  Â  const mins = Math.floor(sessionTimeSecs / 60); //
Â  Â  const secs = sessionTimeSecs % 60; //
Â  Â  // Using seconds format as per previous context to fit tiles better on mobile
Â  Â  const timeLabel = `${sessionTimeSecs}s`; 

Â  Â  // --- Black Belt Degree 7 completion auto-nav ---
Â  Â  useEffect(() => {
Â  Â  Â  Â  if (isBlack && degree === 7 && allCorrect) {
Â  Â  Â  Â  Â  Â  const t = setTimeout(() => navigate('/levels', { replace: true }), 3000);
Â  Â  Â  Â  Â  Â  return () => clearTimeout(t);
Â  Â  Â  Â  }
Â  Â  }, [isBlack, degree, allCorrect, navigate]);


Â  Â  // --- Display Logic ---
Â  Â  const beltName = (() => {
Â  Â  Â  Â  if (isBlack) return `Black (Degree ${degree})`;
Â  Â  Â  Â  switch (selectedDifficulty) {
Â  Â  Â  Â  Â  Â  case 'white': return 'White';
Â  Â  Â  Â  Â  Â  case 'yellow': return 'Yellow';
Â  Â  Â  Â  Â  Â  case 'green': return 'Green';
Â  Â  Â  Â  Â  Â  case 'blue': return 'Blue';
Â  Â  Â  Â  Â  Â  case 'red': return 'Red';
Â  Â  Â  Â  Â  Â  case 'brown': return 'Brown';
Â  Â  Â  Â  Â  Â  default: return 'Unknown';
Â  Â  Â  Â  }
Â  Â  })();
Â  Â  // NOTE: pointsEarned calculation here is flawed as `correctCount` is the daily total, 
Â  Â  // but preserving the logic as requested not to remove anything else.
Â  Â  const handlePrimary = () => {
Â  Â  Â  Â  setShowResult(false);
Â  Â  Â  Â  clearShootingStars();
Â  Â  Â  Â  setLeaving(true);
       setQuizRunId(null); 
Â  Â  Â  Â  if (isBlack) navigate('/black', { replace: true });
Â  Â  Â  Â  else if (selectedDifficulty === 'brown') navigate('/black', { replace: true });
Â  Â  Â  Â  else navigate('/belts', { replace: true });
Â  Â  };

Â  Â  if (leaving) return null;
Â  Â  const pointsEarned = maxQuestions;
Â  Â  return (
Â  Â  Â  Â  <div
Â  Â  Â  Â  Â  Â  className={
Â  Â  Â  Â  Â  Â  Â  Â  "min-h-screen full-height-safe w-full relative px-4 py-6 flex items-center justify-center overflow-auto" // Increased horizontal padding
Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  <Confetti
Â  Â  Â  Â  Â  Â  Â  Â  width={window.innerWidth}
Â  Â  Â  Â  Â  Â  Â  Â  height={window.innerHeight}
Â  Â  Â  Â  Â  Â  Â  Â  numberOfPieces={allCorrect ? 280 : 160}
Â  Â  Â  Â  Â  Â  Â  Â  gravity={0.5}
Â  Â  Â  Â  Â  Â  Â  Â  recycle={false}
Â  Â  Â  Â  Â  Â  Â  Â  style={{ position: 'fixed', inset: 0, zIndex: 40, pointerEvents: 'none' }}
Â  Â  Â  Â  Â  Â  />
            {/* Adjusted star positions for safer display on smaller screens */}
Â  Â  Â  Â  Â  Â  <div className="kid-bg-star star1 top-5 left-5 text-4xl sm:text-5xl">â˜…</div>
Â  Â  Â  Â  Â  Â  <div className="kid-bg-star star2 top-20 right-10 text-3xl sm:text-4xl">â˜…</div>
Â  Â  Â  Â  Â  Â  <div className="kid-bg-star star3 bottom-20 left-10 text-5xl sm:text-6xl">â˜…</div>
Â  Â  Â  Â  Â  Â  <div className="kid-bg-star star4 top-50 right-5 text-2xl sm:text-3xl">â˜…</div>
Â  Â  Â  Â  Â  Â  <div className="kid-bg-star star5 bottom-5 right-20 text-4xl sm:text-5xl">â˜…</div>
Â  Â  Â  Â  Â  Â  <div
Â  Â  Â  Â  Â  Â  Â  Â  className={[
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  "relative z-10 w-full max-w-lg lg:max-w-xl text-center rounded-3xl shadow-2xl", // Constrained max width
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  "bg-white popup-zoom-in animate-pop-in",
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  "p-5 sm:p-8 md:p-10" // Responsive padding
Â  Â  Â  Â  Â  Â  Â  Â  ].join(" ")}
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  <div
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="mx-auto mb-4 sm:mb-6 rounded-xl px-4 py-2 sm:px-6 sm:py-2 celebration-animation" // Responsive padding
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  style={{
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  maxWidth: 400,
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  background:
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  "linear-gradient(90deg, #8BEC98 0%, #FFB703 100%)",
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  boxShadow: "0 8px 24px rgba(0,0,0,.12)"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  }}
Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <h2
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="m-0 text-2xl sm:text-3xl md:text-4xl font-extrabold tracking-wide" // Responsive font size
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  style={{ letterSpacing: '0.06em', color: '#273444' }}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  CONGRATULATIONS
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </h2>
Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  {/* ðŸ‘‡ NEW Wrapper DIV for the Popup Box Style */}
                  <div className="bg-green-100/70 border-2 border-green-300 rounded-2xl py-2 sm:py-6 px-2 mb-6 sm:mb-8 mx-auto max-w-md w-full shadow-lg">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <p className="text-green-700 font-extrabold text-2xl sm:text-3xl md:text-4xl">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  You earned <span className="font-extrabold text-green-1000">{pointsEarned}</span> points!
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </p>
Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â {/* Adjusted grid to ensure tiles fit well on mobile (text size clamp will handle width) */}
Â  Â  Â  Â  Â  Â  Â  Â  <div className="grid grid-cols-2 gap-3 sm:gap-4 md:gap-6 justify-center max-w-xl mx-auto mb-6 sm:mb-8">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="bg-white rounded-xl border-2 border-gray-200 p-3 sm:p-4 shadow">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="text-gray-500 text-xs sm:text-sm">Session Score</div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="wordart-number text-2xl sm:text-4xl mt-1">{sessionCorrectCount}</div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="bg-white rounded-xl border-2 border-gray-200 p-3 sm:p-4 shadow">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="text-gray-500 text-xs sm:text-sm">Time Taken</div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="wordart-number text-2xl sm:text-4xl mt-1">{timeLabel}</div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="bg-white rounded-xl border-2 border-gray-200 p-3 sm:p-4 shadow">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="text-gray-500 text-xs sm:text-sm">Today's Score</div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="wordart-number text-2xl sm:text-4xl mt-1">{correctCount}</div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="bg-white rounded-xl border-2 border-gray-200 p-3 sm:p-4 shadow">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="text-gray-500 text-xs sm:text-sm">Total Score</div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="wordart-number text-2xl sm:text-4xl mt-1">{grandTotalCorrect}</div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  <div className=" mb-4 sm:mb-6">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  type="button"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className=" bg-green-100/70 kid-btn animate-fade-in-up text-base sm:text-lg md:text-xl px-4 sm:px-6 py-2 sm:py-3" // Responsive button size
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  aria-label="belt-earned"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ðŸŽ‰ You earned the {beltName} Belt!
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  <div className="flex justify-center">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="px-6 py-3 rounded-2xl bg-green-600 text-white font-semibold hover:opacity-90 transition text-base sm:text-lg"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={handlePrimary}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {isBlack ? 'Go to Degrees' : 'Go to Belts'}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  </div>
Â  Â  );
};

export default ResultsScreen;
